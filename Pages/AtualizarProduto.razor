@page "/atualizarproduto/{id:int}"
@inject ProdutoServices service

<div class="row m-5">
    <div class="col-5 bg-light m-2 justify-content-start">
        <div class="p-3 mb-3 bg-success text-white text-center">Editar Produto</div>
        <EditForm Model="@Prod">
            <div class="form-group">
                <label for="nome">Nome Produto</label>
                <input type="text" id="name" class="form-control" @bind-value="@Prod.Nome" />
            </div>
            <div class="form-group">
                <label for="preço">Preço</label>
                <input type="text" id="preco" class="form-control" @bind="@Prod.Preço" />
            </div>
            <div class="form-group">
                <label for="quant">Quantidade</label>
                <input type="text" id="quantity" class="form-control" @bind="@Prod.Quant" />
            </div>
            <div class="form-group">
                <label for="Descr">Descrição</label>
                <input type="text" id="Descricao" class="form-control" @bind="@Prod.Descr" />
            </div>
            <div class="text-center p-3 mb-3">
                <button class="btn btn-success" @onclick="EditarProduto">Editar Produto</button>
            </div>
        </EditForm>
        <NavLink href="/..">Lista de produtos</NavLink>
    </div>
    @if (produtoEditado)
    {
        <div style="color: red">
            <strong>@mensagemEditado</strong>
        </div>
    }
</div>

@code {
    public Produto Prod = new Produto();

    bool produtoEditado = false;
    string mensagemEditado = string.Empty;
    public int id { get; set; }
    
    /* protected override async Task OnParametersSetAsync()
    {
        Prod = await service.GetProductByIdAsync(id);
    } */

    private async Task EditarProduto()
    {
        await service.UpdateProductAsync(Prod);

        mensagemEditado = $"Produto editado com sucesso!";
        produtoEditado = true;
    }
}